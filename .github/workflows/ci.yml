# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        name: Cache yarn cache
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - uses: actions/cache@v1
        name: Cache node_modules
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - uses: actions/cache@v1
        name: Cache scripts node_modules
        id: cache-scripts-node-modules
        with:
          path: packages/scripts/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-scripts-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-scripts-node-modules

      - run: yarn install
        name: Install Dependencies
        if: steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true' ||
          steps.cache-node-modules-docsite.outputs.cache-hit != 'true' ||
          steps.cache-node-modules-svg-renderer.outputs.cache-hit != 'true' ||
          steps.cache-node-modules-examplesweb.outputs.cache-hit != 'true'

      - run: yarn test
        name: Execute Tests
        env:
          CI: true

      - run: yarn audit
        name: Audit Dpendencies
        env:
          CI: true

      - name: Publish coverage to codecov.io
        uses: codecov/codecov-action@v1.0.3
        if: success() && matrix.node-version == '14.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  auto-merge:
    name: Auto-Merge Dependabot PRs
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: auto-merge
        uses: ridedott/dependabot-auto-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.AUTOMERGE_PAT }}
